apiVersion: v1
kind: Service
metadata:
  name: mc-vanilla
  labels:
    app: mc-vanilla
  annotations:
    "mc-router.itzg.me/externalServerName": "oasis.learn.study"
spec:
  ports:
  - port: 25565
    targetPort: 25565
    name: minecraft
  - port: 25575
    targetPort: 25575
    name: rcon
  selector:
    app: mc-vanilla
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mc-vanilla
spec:
  selector:
    matchLabels:
      app: mc-vanilla
  serviceName: "mc-vanilla"
  replicas: 1
  template:
    metadata:
      labels:
        app: mc-vanilla
    spec:
      # https://kubernetes.io/docs/tasks/run-application/force-delete-stateful-set-pod/ ?
      # terminationGracePeriodSeconds: 13
      containers:
      # Using a fixed release tag always prevents unexpected surprises!
      - image: itzg/minecraft-server:2021.22.0-java16-openj9
        name: mc-vanilla
        resources:
          requests:
            # https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview#allowable_resource_ranges
            # The 512 should avoid "Warning: Autopilot increased resource requests (...) to meet requirements."
            memory: "512Mi"
            # 0.1 which gets rounded up to 0.25 (see above) makes start-up of Vanilla 1.17.1 take several minutes
            # but 1 could be better than 2, because it would allow idle https://github.com/itzg/docker-minecraft-server/#autopaus
            # to be priced for lower 0.9 instead of 1.03 Memory than the min. 1 GiB a 2 CPU pods gets charged, because of 
            # https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview
            # But 1 vCPU takes 100s (1.5') to start-up, but with 4 vCPU only 17s, and with 8 vCPU it's 12s.
            # Even though even a server without players will initially eat up all 8, the AutoPause will soon reduce it to 0.
            cpu: "4"
          limits:
            memory: "4096Mi"
            cpu: "4"
        env:
        # https://github.com/OASIS-learn-study/kubernetes.oasis.learn.study#memory-management
        - name: JVM_XX_OPTS
          # NB that e.g. USE_AIKAR_FLAGS doesn't really make sense anymore with OpenJ9, let's fail fast to avoid confusion
          value: "-XX:-IgnoreUnrecognizedXXColonOptions"
        - name: INIT_MEMORY
          # this lets the JVM return unused heap memory to the OS!
          value: "500M"
        - name: MAX_MEMORY
          # should probably be something a bit lower than container memory limit, but exactly is TBD
          value: "1800M"
        - name: USE_LARGE_PAGES
          value: "true"
        - name: TUNE_VIRTUALIZED
          # https://www.eclipse.org/openj9/docs/xtunevirtualized/
          value: "true"
        - name: TUNE_NURSERY_SIZES
          value: "true"
        # Now other stuff not related to memory managment
        - name: RCON_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mc-vanilla
              key: rcon
        - name: ENABLE_RCON
          value: "true"
        - name: VERSION
          # https://github.com/itzg/docker-minecraft-server#versions
          value: "1.17.1"
        - name: MODE
          value: "1"
        - name: MOTD
          value: "Minecraft Demo on Kubernetes"
        - name: EULA
          value: "true"
        ports:
        - containerPort: 25565
          name: minecraft
        - containerPort: 25575
          name: rcon
#        readinessProbe:
#          exec:
#            command:
#            - mc-monitor
#            - status
#          initialDelaySeconds: 300
#          periodSeconds: 300
#        livenessProbe:
#          exec:
#            command:
#            - mc-monitor
#            - status
#          initialDelaySeconds: 300
#          periodSeconds: 300
        volumeMounts:
        - name: mc-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: mc-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
